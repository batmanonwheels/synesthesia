// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String
  email String @unique
  profilePic String
  spotifyUrl String
  country String
  href String
  uri String
  totalFollowers Int
  accessToken String @unique
  refreshToken String @unique
  likes Like[]
  favorites Favorite[]
  comments Comment[]
  reviews Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Track {
  id Int @id @default(autoincrement())
  name String
  artist String
  album String
  image String
  preview String
  spotifyUri String
  favorites Favorite[]
  reviews Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Favorite {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  Track Track @relation(fields: [trackId], references: [id])
  trackId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id Int @id @default(autoincrement())
  title String
  text String
  rating Int
  author User @relation(fields: [authorId], references: [id])
  authorId Int
  track Track @relation(fields: [trackId], references: [id])
  trackId Int
  comments Comment[]
  likes Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id Int @id @default(autoincrement())
  review Review @relation(fields: [reviewId], references: [id])
  reviewId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id Int @id @default(autoincrement())
  text String
  review Review @relation(fields: [reviewId], references: [id])
  reviewId Int
  author User @relation(fields: [authorId], references: [id])
  authorId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}




